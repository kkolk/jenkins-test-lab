Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  # Provision Jenkins Host
  # uses xip.io for wildcard DNS resolution - http://xip.io/
  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.box = "ubuntu/xenial64"
    jenkins.vm.network "private_network", ip: "192.168.100.10"
    jenkins.vm.hostname = "jenkins.192.168.100.10.xip.io"
  
    # Setup Jenkins host resources
    jenkins.vm.provider "virtualbox" do |vb|
        vb.memory = "2048"
        vb.cpus = "1"
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end

    # Lets make ansible output more readable.
    jenkins.vm.provision :ansible_local do |ansible|
        ansible.playbook = "ansible-set-callback.yml"
        ansible.install_mode = "pip"
    end
    
    # Run our Jenkins installation play
    jenkins.vm.provision :ansible_local do |ansible|
        ansible.playbook = "jenkins-install.yml"
        # ansible.verbose = "vvv"
    end
  end

  # Provision Windows worker for Jenkins
  config.vm.define "winworker" do |winworker|
    winworker.vm.provider "virtualbox" do |vb|
    # install runs really slow with only 1 core.
      vb.cpus = "2"
    # box image we are using appears to include vb.gui = true
    # forcing it to false.
      vb.gui = false
    end
    winworker.vm.box = "jacqinthebox/windowsserver2016core"
    winworker.vm.network "private_network", ip: "192.168.100.20"
    winworker.vm.hostname = "winworker"
    # Jenkins needs JAVA to be installed
    winworker.vm.provision "shell", path:"scripts/InstallJava.ps1"
    # Jenkins agent service
    winworker.vm.provision "shell", path:"scripts/InstallJenkinsService.ps1"
    # Setup ansible remoting for future use
    winworker.vm.provision "shell", path:"scripts/ConfigureRemotingForAnsible.ps1"
    # Chocolately Install (for quick provisioning required ASP.NET MVC packages)
    winworker.vm.provision "shell", path:"scripts/InstallChocolatey.ps1"
    # Install additional packages
    winworker.vm.provision "shell", inline: "choco install aspnetmvc4.install aspnetmvc git dotnetfx -y"
    # # Install Build Tools
    winworker.vm.provision "shell", inline: "choco install visualstudio2017buildtools visualstudio2017-workload-webbuildtools visualstudio2017-workload-netcorebuildtools -y"
    # This is slow and a space hog, better to use the choco installs.
    # winworker.vm.provision "shell", path: "scripts/InstallVS2017BuildTools.ps1"
    
    # Restart VM so that Visual Studio changes can be applied.
    winworker.vm.provision :reload
  end

  config.vm.define "javaworker" do |javaworker|
    javaworker.vm.box = "ubuntu/xenial64"
    javaworker.vm.network "private_network", ip: "192.168.100.30"
    javaworker.vm.hostname = "javaworker.192.168.100.30.xip.io"
  
    # Setup javaworker host resources
    javaworker.vm.provider "virtualbox" do |vb|
        vb.memory = "1048"
        vb.cpus = "1"
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end

    # Lets make ansible output more readable.
    javaworker.vm.provision :ansible_local do |ansible|
        ansible.playbook = "ansible-set-callback.yml"
        ansible.install_mode = "pip"
    end
    
  end

  config.vm.define "javaworker2" do |javaworker2|
    javaworker2.vm.box = "ubuntu/xenial64"
    javaworker2.vm.network "private_network", ip: "192.168.100.31"
    javaworker2.vm.hostname = "javaworker2.192.168.100.31.xip.io"
  
    # Setup javaworker2 host resources
    javaworker2.vm.provider "virtualbox" do |vb|
        vb.memory = "1048"
        vb.cpus = "1"
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end

    # Lets make ansible output more readable.
    javaworker2.vm.provision :ansible_local do |ansible|
        ansible.playbook = "ansible-set-callback.yml"
        ansible.install_mode = "pip"
    end
    
  end
end
